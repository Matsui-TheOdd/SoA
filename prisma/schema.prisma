generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ExcelFile {
  id         String    @id @db.VarChar(50)
  Name       String    @db.Text
  URL        String?   @db.Text
  ImportDate DateTime? @db.DateTime
  ProjectID  String?   @db.VarChar(50)
  Project    Project?  @relation(fields: [ProjectID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  SoA        SoA[]
}

model IFCFile {
  id         String    @id @db.VarChar(50)
  Name       String    @db.Text
  URL        String?   @db.Text
  ImportDate DateTime? @db.DateTime
  ProjectID  String?   @db.VarChar(50)
  Project    Project?  @relation(fields: [ProjectID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Project {
  id          String       @id @db.VarChar(50)
  Name        String       @db.Text
  Description String?      @db.Text
  CreateDate  DateTime?    @db.DateTime
  ModifyDate  DateTime?    @db.DateTime
  isDelete    Boolean?
  Status      String?      @db.VarChar(50)
  UserId      Int?
  BackUpFile  BackUpFile[]
  ExcelFile   ExcelFile[]
  IFCFile     IFCFile[]
  User        User?        @relation(fields: [UserId], references: [id], onUpdate: NoAction)
}

model SoA {
  id                 String     @id @db.VarChar(50)
  RefNo              String?    @db.Text
  Description        String?    @db.Text
  Rooms              String?    @db.Text
  UnitArea           String?    @db.Text
  CellularRoom       String?    @db.Text
  OpenPlan           String?    @db.Text
  SpecialRequirement String?    @db.Text
  ExcelID            String?    @db.VarChar(50)
  ExcelFile          ExcelFile? @relation(fields: [ExcelID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sysdiagrams {
  name         String  @db.VarChar(128)
  principal_id Int
  diagram_id   Int     @id @default(autoincrement())
  version      Int?
  definition   Bytes?  @db.Blob
  @@unique([principal_id, name])
}

model BackUpFile {
  id              String            @id @db.VarChar(50)
  ProjectID       String?           @db.VarChar(50)
  ImportDate      DateTime?         @db.DateTime
  Project         Project?          @relation(fields: [ProjectID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ExcelFileBackUp ExcelFileBackUp[]
  IFCFileBackUp   IFCFileBackUp[]
}

model ExcelFileBackUp {
  id           String      @id @db.VarChar(50)
  Name         String      @db.Text
  URL          String?     @db.Text
  BackUpFileID String?     @db.VarChar(50)
  BackUpFile   BackUpFile? @relation(fields: [BackUpFileID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  SoABackUp    SoABackUp[]
}

model IFCFileBackUp {
  id           String      @id @db.VarChar(50)
  Name         String      @db.Text
  URL          String?     @db.Text
  BackUpFileID String?     @db.VarChar(50)
  BackUpFile   BackUpFile? @relation(fields: [BackUpFileID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model SoABackUp {
  id                 String           @id @db.VarChar(50)
  RefNo              String?          @db.Text
  Description        String?          @db.Text
  Rooms              String?          @db.Text
  UnitArea           String?          @db.Text
  CellularRoom       String?          @db.Text
  OpenPlan           String?          @db.Text
  SpecialRequirement String?          @db.Text
  ExcelID            String?          @db.VarChar(50)
  ExcelFileBackUp    ExcelFileBackUp? @relation(fields: [ExcelID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id      Int       @id @default(autoincrement())
  Name    String?   @db.VarChar(100)
  Project Project[]
}
